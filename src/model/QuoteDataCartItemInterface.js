/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/QuoteDataCartItemExtensionInterface', 'model/QuoteDataProductOptionInterface'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./QuoteDataCartItemExtensionInterface'), require('./QuoteDataProductOptionInterface'));
  } else {
    // Browser globals (root is window)
    if (!root.magento) {
      root.magento = {};
    }
    root.magento.QuoteDataCartItemInterface = factory(root.magento.ApiClient, root.magento.QuoteDataCartItemExtensionInterface, root.magento.QuoteDataProductOptionInterface);
  }
}(this, function(ApiClient, QuoteDataCartItemExtensionInterface, QuoteDataProductOptionInterface) {
  'use strict';




  /**
   * The QuoteDataCartItemInterface model module.
   * @module model/QuoteDataCartItemInterface
   * @version 2.0
   */

  /**
   * Constructs a new <code>QuoteDataCartItemInterface</code>.
   * Interface CartItemInterface
   * @alias module:model/QuoteDataCartItemInterface
   * @class
   * @param qty {Number} Product quantity.
   * @param quoteId {String} Quote id.
   */
  var exports = function(qty, quoteId) {
    var _this = this;



    _this['qty'] = qty;



    _this['quoteId'] = quoteId;


  };

  /**
   * Constructs a <code>QuoteDataCartItemInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/QuoteDataCartItemInterface} obj Optional instance to populate.
   * @return {module:model/QuoteDataCartItemInterface} The populated <code>QuoteDataCartItemInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('itemId')) {
        obj['itemId'] = ApiClient.convertToType(data['itemId'], 'Number');
      }
      if (data.hasOwnProperty('sku')) {
        obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
      }
      if (data.hasOwnProperty('qty')) {
        obj['qty'] = ApiClient.convertToType(data['qty'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('price')) {
        obj['price'] = ApiClient.convertToType(data['price'], 'Number');
      }
      if (data.hasOwnProperty('productType')) {
        obj['productType'] = ApiClient.convertToType(data['productType'], 'String');
      }
      if (data.hasOwnProperty('quoteId')) {
        obj['quoteId'] = ApiClient.convertToType(data['quoteId'], 'String');
      }
      if (data.hasOwnProperty('productOption')) {
        obj['productOption'] = QuoteDataProductOptionInterface.constructFromObject(data['productOption']);
      }
      if (data.hasOwnProperty('extensionAttributes')) {
        obj['extensionAttributes'] = QuoteDataCartItemExtensionInterface.constructFromObject(data['extensionAttributes']);
      }
    }
    return obj;
  }

  /**
   * Item ID. Otherwise, null.
   * @member {Number} itemId
   */
  exports.prototype['itemId'] = undefined;
  /**
   * Product SKU. Otherwise, null.
   * @member {String} sku
   */
  exports.prototype['sku'] = undefined;
  /**
   * Product quantity.
   * @member {Number} qty
   */
  exports.prototype['qty'] = undefined;
  /**
   * Product name. Otherwise, null.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Product price. Otherwise, null.
   * @member {Number} price
   */
  exports.prototype['price'] = undefined;
  /**
   * Product type. Otherwise, null.
   * @member {String} productType
   */
  exports.prototype['productType'] = undefined;
  /**
   * Quote id.
   * @member {String} quoteId
   */
  exports.prototype['quoteId'] = undefined;
  /**
   * @member {module:model/QuoteDataProductOptionInterface} productOption
   */
  exports.prototype['productOption'] = undefined;
  /**
   * @member {module:model/QuoteDataCartItemExtensionInterface} extensionAttributes
   */
  exports.prototype['extensionAttributes'] = undefined;



  return exports;
}));



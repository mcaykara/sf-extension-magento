/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CatalogDataCategoryTreeInterface'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CatalogDataCategoryTreeInterface'));
  } else {
    // Browser globals (root is window)
    if (!root.magento) {
      root.magento = {};
    }
    root.magento.CatalogDataCategoryTreeInterface = factory(root.magento.ApiClient, root.magento.CatalogDataCategoryTreeInterface);
  }
}(this, function(ApiClient, CatalogDataCategoryTreeInterface) {
  'use strict';




  /**
   * The CatalogDataCategoryTreeInterface model module.
   * @module model/CatalogDataCategoryTreeInterface
   * @version 2.0
   */

  /**
   * Constructs a new <code>CatalogDataCategoryTreeInterface</code>.
   * 
   * @alias module:model/CatalogDataCategoryTreeInterface
   * @class
   * @param parentId {Number} Parent category ID
   * @param name {String} Category name
   * @param isActive {Boolean} Whether category is active
   * @param position {Number} Category position
   * @param level {Number} Category level
   * @param productCount {Number} Product count
   * @param childrenData {Array.<module:model/CatalogDataCategoryTreeInterface>} 
   */
  var exports = function(parentId, name, isActive, position, level, productCount, childrenData) {
    var _this = this;


    _this['parentId'] = parentId;
    _this['name'] = name;
    _this['isActive'] = isActive;
    _this['position'] = position;
    _this['level'] = level;
    _this['productCount'] = productCount;
    _this['childrenData'] = childrenData;
  };

  /**
   * Constructs a <code>CatalogDataCategoryTreeInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CatalogDataCategoryTreeInterface} obj Optional instance to populate.
   * @return {module:model/CatalogDataCategoryTreeInterface} The populated <code>CatalogDataCategoryTreeInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('parentId')) {
        obj['parentId'] = ApiClient.convertToType(data['parentId'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('isActive')) {
        obj['isActive'] = ApiClient.convertToType(data['isActive'], 'Boolean');
      }
      if (data.hasOwnProperty('position')) {
        obj['position'] = ApiClient.convertToType(data['position'], 'Number');
      }
      if (data.hasOwnProperty('level')) {
        obj['level'] = ApiClient.convertToType(data['level'], 'Number');
      }
      if (data.hasOwnProperty('productCount')) {
        obj['productCount'] = ApiClient.convertToType(data['productCount'], 'Number');
      }
      if (data.hasOwnProperty('childrenData')) {
        obj['childrenData'] = ApiClient.convertToType(data['childrenData'], [CatalogDataCategoryTreeInterface]);
      }
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Parent category ID
   * @member {Number} parentId
   */
  exports.prototype['parentId'] = undefined;
  /**
   * Category name
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Whether category is active
   * @member {Boolean} isActive
   */
  exports.prototype['isActive'] = undefined;
  /**
   * Category position
   * @member {Number} position
   */
  exports.prototype['position'] = undefined;
  /**
   * Category level
   * @member {Number} level
   */
  exports.prototype['level'] = undefined;
  /**
   * Product count
   * @member {Number} productCount
   */
  exports.prototype['productCount'] = undefined;
  /**
   * @member {Array.<module:model/CatalogDataCategoryTreeInterface>} childrenData
   */
  exports.prototype['childrenData'] = undefined;



  return exports;
}));



/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/FrameworkAttributeInterface', 'model/RmaDataCommentInterface', 'model/RmaDataItemInterface', 'model/RmaDataRmaExtensionInterface', 'model/RmaDataTrackInterface'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./FrameworkAttributeInterface'), require('./RmaDataCommentInterface'), require('./RmaDataItemInterface'), require('./RmaDataRmaExtensionInterface'), require('./RmaDataTrackInterface'));
  } else {
    // Browser globals (root is window)
    if (!root.magento) {
      root.magento = {};
    }
    root.magento.RmaDataRmaInterface = factory(root.magento.ApiClient, root.magento.FrameworkAttributeInterface, root.magento.RmaDataCommentInterface, root.magento.RmaDataItemInterface, root.magento.RmaDataRmaExtensionInterface, root.magento.RmaDataTrackInterface);
  }
}(this, function(ApiClient, FrameworkAttributeInterface, RmaDataCommentInterface, RmaDataItemInterface, RmaDataRmaExtensionInterface, RmaDataTrackInterface) {
  'use strict';




  /**
   * The RmaDataRmaInterface model module.
   * @module model/RmaDataRmaInterface
   * @version 2.0
   */

  /**
   * Constructs a new <code>RmaDataRmaInterface</code>.
   * Interface RmaInterface
   * @alias module:model/RmaDataRmaInterface
   * @class
   * @param incrementId {String} Entity_id
   * @param entityId {Number} Entity_id
   * @param orderId {Number} Order_id
   * @param orderIncrementId {String} Order_increment_id
   * @param storeId {Number} Store_id
   * @param customerId {Number} Customer_id
   * @param dateRequested {String} Date_requested
   * @param customerCustomEmail {String} Customer_custom_email
   * @param items {Array.<module:model/RmaDataItemInterface>} Items
   * @param status {String} Status
   * @param comments {Array.<module:model/RmaDataCommentInterface>} Comments list
   * @param tracks {Array.<module:model/RmaDataTrackInterface>} Tracks list
   */
  var exports = function(incrementId, entityId, orderId, orderIncrementId, storeId, customerId, dateRequested, customerCustomEmail, items, status, comments, tracks) {
    var _this = this;

    _this['incrementId'] = incrementId;
    _this['entityId'] = entityId;
    _this['orderId'] = orderId;
    _this['orderIncrementId'] = orderIncrementId;
    _this['storeId'] = storeId;
    _this['customerId'] = customerId;
    _this['dateRequested'] = dateRequested;
    _this['customerCustomEmail'] = customerCustomEmail;
    _this['items'] = items;
    _this['status'] = status;
    _this['comments'] = comments;
    _this['tracks'] = tracks;


  };

  /**
   * Constructs a <code>RmaDataRmaInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RmaDataRmaInterface} obj Optional instance to populate.
   * @return {module:model/RmaDataRmaInterface} The populated <code>RmaDataRmaInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('incrementId')) {
        obj['incrementId'] = ApiClient.convertToType(data['incrementId'], 'String');
      }
      if (data.hasOwnProperty('entityId')) {
        obj['entityId'] = ApiClient.convertToType(data['entityId'], 'Number');
      }
      if (data.hasOwnProperty('orderId')) {
        obj['orderId'] = ApiClient.convertToType(data['orderId'], 'Number');
      }
      if (data.hasOwnProperty('orderIncrementId')) {
        obj['orderIncrementId'] = ApiClient.convertToType(data['orderIncrementId'], 'String');
      }
      if (data.hasOwnProperty('storeId')) {
        obj['storeId'] = ApiClient.convertToType(data['storeId'], 'Number');
      }
      if (data.hasOwnProperty('customerId')) {
        obj['customerId'] = ApiClient.convertToType(data['customerId'], 'Number');
      }
      if (data.hasOwnProperty('dateRequested')) {
        obj['dateRequested'] = ApiClient.convertToType(data['dateRequested'], 'String');
      }
      if (data.hasOwnProperty('customerCustomEmail')) {
        obj['customerCustomEmail'] = ApiClient.convertToType(data['customerCustomEmail'], 'String');
      }
      if (data.hasOwnProperty('items')) {
        obj['items'] = ApiClient.convertToType(data['items'], [RmaDataItemInterface]);
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('comments')) {
        obj['comments'] = ApiClient.convertToType(data['comments'], [RmaDataCommentInterface]);
      }
      if (data.hasOwnProperty('tracks')) {
        obj['tracks'] = ApiClient.convertToType(data['tracks'], [RmaDataTrackInterface]);
      }
      if (data.hasOwnProperty('extensionAttributes')) {
        obj['extensionAttributes'] = RmaDataRmaExtensionInterface.constructFromObject(data['extensionAttributes']);
      }
      if (data.hasOwnProperty('customAttributes')) {
        obj['customAttributes'] = ApiClient.convertToType(data['customAttributes'], [FrameworkAttributeInterface]);
      }
    }
    return obj;
  }

  /**
   * Entity_id
   * @member {String} incrementId
   */
  exports.prototype['incrementId'] = undefined;
  /**
   * Entity_id
   * @member {Number} entityId
   */
  exports.prototype['entityId'] = undefined;
  /**
   * Order_id
   * @member {Number} orderId
   */
  exports.prototype['orderId'] = undefined;
  /**
   * Order_increment_id
   * @member {String} orderIncrementId
   */
  exports.prototype['orderIncrementId'] = undefined;
  /**
   * Store_id
   * @member {Number} storeId
   */
  exports.prototype['storeId'] = undefined;
  /**
   * Customer_id
   * @member {Number} customerId
   */
  exports.prototype['customerId'] = undefined;
  /**
   * Date_requested
   * @member {String} dateRequested
   */
  exports.prototype['dateRequested'] = undefined;
  /**
   * Customer_custom_email
   * @member {String} customerCustomEmail
   */
  exports.prototype['customerCustomEmail'] = undefined;
  /**
   * Items
   * @member {Array.<module:model/RmaDataItemInterface>} items
   */
  exports.prototype['items'] = undefined;
  /**
   * Status
   * @member {String} status
   */
  exports.prototype['status'] = undefined;
  /**
   * Comments list
   * @member {Array.<module:model/RmaDataCommentInterface>} comments
   */
  exports.prototype['comments'] = undefined;
  /**
   * Tracks list
   * @member {Array.<module:model/RmaDataTrackInterface>} tracks
   */
  exports.prototype['tracks'] = undefined;
  /**
   * @member {module:model/RmaDataRmaExtensionInterface} extensionAttributes
   */
  exports.prototype['extensionAttributes'] = undefined;
  /**
   * Custom attributes values.
   * @member {Array.<module:model/FrameworkAttributeInterface>} customAttributes
   */
  exports.prototype['customAttributes'] = undefined;



  return exports;
}));



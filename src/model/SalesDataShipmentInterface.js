/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SalesDataShipmentCommentInterface', 'model/SalesDataShipmentExtensionInterface', 'model/SalesDataShipmentItemInterface', 'model/SalesDataShipmentPackageInterface', 'model/SalesDataShipmentTrackInterface'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SalesDataShipmentCommentInterface'), require('./SalesDataShipmentExtensionInterface'), require('./SalesDataShipmentItemInterface'), require('./SalesDataShipmentPackageInterface'), require('./SalesDataShipmentTrackInterface'));
  } else {
    // Browser globals (root is window)
    if (!root.magento) {
      root.magento = {};
    }
    root.magento.SalesDataShipmentInterface = factory(root.magento.ApiClient, root.magento.SalesDataShipmentCommentInterface, root.magento.SalesDataShipmentExtensionInterface, root.magento.SalesDataShipmentItemInterface, root.magento.SalesDataShipmentPackageInterface, root.magento.SalesDataShipmentTrackInterface);
  }
}(this, function(ApiClient, SalesDataShipmentCommentInterface, SalesDataShipmentExtensionInterface, SalesDataShipmentItemInterface, SalesDataShipmentPackageInterface, SalesDataShipmentTrackInterface) {
  'use strict';




  /**
   * The SalesDataShipmentInterface model module.
   * @module model/SalesDataShipmentInterface
   * @version 2.0
   */

  /**
   * Constructs a new <code>SalesDataShipmentInterface</code>.
   * Shipment interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package.
   * @alias module:model/SalesDataShipmentInterface
   * @class
   * @param orderId {Number} Order ID.
   * @param items {Array.<module:model/SalesDataShipmentItemInterface>} Array of items.
   * @param tracks {Array.<module:model/SalesDataShipmentTrackInterface>} Array of tracks.
   * @param comments {Array.<module:model/SalesDataShipmentCommentInterface>} Array of comments.
   */
  var exports = function(orderId, items, tracks, comments) {
    var _this = this;







    _this['orderId'] = orderId;








    _this['items'] = items;
    _this['tracks'] = tracks;
    _this['comments'] = comments;

  };

  /**
   * Constructs a <code>SalesDataShipmentInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SalesDataShipmentInterface} obj Optional instance to populate.
   * @return {module:model/SalesDataShipmentInterface} The populated <code>SalesDataShipmentInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('billingAddressId')) {
        obj['billingAddressId'] = ApiClient.convertToType(data['billingAddressId'], 'Number');
      }
      if (data.hasOwnProperty('createdAt')) {
        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
      }
      if (data.hasOwnProperty('customerId')) {
        obj['customerId'] = ApiClient.convertToType(data['customerId'], 'Number');
      }
      if (data.hasOwnProperty('emailSent')) {
        obj['emailSent'] = ApiClient.convertToType(data['emailSent'], 'Number');
      }
      if (data.hasOwnProperty('entityId')) {
        obj['entityId'] = ApiClient.convertToType(data['entityId'], 'Number');
      }
      if (data.hasOwnProperty('incrementId')) {
        obj['incrementId'] = ApiClient.convertToType(data['incrementId'], 'String');
      }
      if (data.hasOwnProperty('orderId')) {
        obj['orderId'] = ApiClient.convertToType(data['orderId'], 'Number');
      }
      if (data.hasOwnProperty('packages')) {
        obj['packages'] = ApiClient.convertToType(data['packages'], [SalesDataShipmentPackageInterface]);
      }
      if (data.hasOwnProperty('shipmentStatus')) {
        obj['shipmentStatus'] = ApiClient.convertToType(data['shipmentStatus'], 'Number');
      }
      if (data.hasOwnProperty('shippingAddressId')) {
        obj['shippingAddressId'] = ApiClient.convertToType(data['shippingAddressId'], 'Number');
      }
      if (data.hasOwnProperty('shippingLabel')) {
        obj['shippingLabel'] = ApiClient.convertToType(data['shippingLabel'], 'String');
      }
      if (data.hasOwnProperty('storeId')) {
        obj['storeId'] = ApiClient.convertToType(data['storeId'], 'Number');
      }
      if (data.hasOwnProperty('totalQty')) {
        obj['totalQty'] = ApiClient.convertToType(data['totalQty'], 'Number');
      }
      if (data.hasOwnProperty('totalWeight')) {
        obj['totalWeight'] = ApiClient.convertToType(data['totalWeight'], 'Number');
      }
      if (data.hasOwnProperty('updatedAt')) {
        obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');
      }
      if (data.hasOwnProperty('items')) {
        obj['items'] = ApiClient.convertToType(data['items'], [SalesDataShipmentItemInterface]);
      }
      if (data.hasOwnProperty('tracks')) {
        obj['tracks'] = ApiClient.convertToType(data['tracks'], [SalesDataShipmentTrackInterface]);
      }
      if (data.hasOwnProperty('comments')) {
        obj['comments'] = ApiClient.convertToType(data['comments'], [SalesDataShipmentCommentInterface]);
      }
      if (data.hasOwnProperty('extensionAttributes')) {
        obj['extensionAttributes'] = SalesDataShipmentExtensionInterface.constructFromObject(data['extensionAttributes']);
      }
    }
    return obj;
  }

  /**
   * Billing address ID.
   * @member {Number} billingAddressId
   */
  exports.prototype['billingAddressId'] = undefined;
  /**
   * Created-at timestamp.
   * @member {String} createdAt
   */
  exports.prototype['createdAt'] = undefined;
  /**
   * Customer ID.
   * @member {Number} customerId
   */
  exports.prototype['customerId'] = undefined;
  /**
   * Email-sent flag value.
   * @member {Number} emailSent
   */
  exports.prototype['emailSent'] = undefined;
  /**
   * Shipment ID.
   * @member {Number} entityId
   */
  exports.prototype['entityId'] = undefined;
  /**
   * Increment ID.
   * @member {String} incrementId
   */
  exports.prototype['incrementId'] = undefined;
  /**
   * Order ID.
   * @member {Number} orderId
   */
  exports.prototype['orderId'] = undefined;
  /**
   * Array of packages, if any. Otherwise, null.
   * @member {Array.<module:model/SalesDataShipmentPackageInterface>} packages
   */
  exports.prototype['packages'] = undefined;
  /**
   * Shipment status.
   * @member {Number} shipmentStatus
   */
  exports.prototype['shipmentStatus'] = undefined;
  /**
   * Shipping address ID.
   * @member {Number} shippingAddressId
   */
  exports.prototype['shippingAddressId'] = undefined;
  /**
   * Shipping label.
   * @member {String} shippingLabel
   */
  exports.prototype['shippingLabel'] = undefined;
  /**
   * Store ID.
   * @member {Number} storeId
   */
  exports.prototype['storeId'] = undefined;
  /**
   * Total quantity.
   * @member {Number} totalQty
   */
  exports.prototype['totalQty'] = undefined;
  /**
   * Total weight.
   * @member {Number} totalWeight
   */
  exports.prototype['totalWeight'] = undefined;
  /**
   * Updated-at timestamp.
   * @member {String} updatedAt
   */
  exports.prototype['updatedAt'] = undefined;
  /**
   * Array of items.
   * @member {Array.<module:model/SalesDataShipmentItemInterface>} items
   */
  exports.prototype['items'] = undefined;
  /**
   * Array of tracks.
   * @member {Array.<module:model/SalesDataShipmentTrackInterface>} tracks
   */
  exports.prototype['tracks'] = undefined;
  /**
   * Array of comments.
   * @member {Array.<module:model/SalesDataShipmentCommentInterface>} comments
   */
  exports.prototype['comments'] = undefined;
  /**
   * @member {module:model/SalesDataShipmentExtensionInterface} extensionAttributes
   */
  exports.prototype['extensionAttributes'] = undefined;



  return exports;
}));



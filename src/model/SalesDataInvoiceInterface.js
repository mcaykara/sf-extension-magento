/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SalesDataInvoiceCommentInterface', 'model/SalesDataInvoiceExtensionInterface', 'model/SalesDataInvoiceItemInterface'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SalesDataInvoiceCommentInterface'), require('./SalesDataInvoiceExtensionInterface'), require('./SalesDataInvoiceItemInterface'));
  } else {
    // Browser globals (root is window)
    if (!root.magento) {
      root.magento = {};
    }
    root.magento.SalesDataInvoiceInterface = factory(root.magento.ApiClient, root.magento.SalesDataInvoiceCommentInterface, root.magento.SalesDataInvoiceExtensionInterface, root.magento.SalesDataInvoiceItemInterface);
  }
}(this, function(ApiClient, SalesDataInvoiceCommentInterface, SalesDataInvoiceExtensionInterface, SalesDataInvoiceItemInterface) {
  'use strict';




  /**
   * The SalesDataInvoiceInterface model module.
   * @module model/SalesDataInvoiceInterface
   * @version 2.0
   */

  /**
   * Constructs a new <code>SalesDataInvoiceInterface</code>.
   * Invoice interface. An invoice is a record of the receipt of payment for an order.
   * @alias module:model/SalesDataInvoiceInterface
   * @class
   * @param orderId {Number} Order ID.
   * @param totalQty {Number} Total quantity.
   * @param items {Array.<module:model/SalesDataInvoiceItemInterface>} Array of invoice items.
   */
  var exports = function(orderId, totalQty, items) {
    var _this = this;




























    _this['orderId'] = orderId;













    _this['totalQty'] = totalQty;


    _this['items'] = items;


  };

  /**
   * Constructs a <code>SalesDataInvoiceInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SalesDataInvoiceInterface} obj Optional instance to populate.
   * @return {module:model/SalesDataInvoiceInterface} The populated <code>SalesDataInvoiceInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('baseCurrencyCode')) {
        obj['baseCurrencyCode'] = ApiClient.convertToType(data['baseCurrencyCode'], 'String');
      }
      if (data.hasOwnProperty('baseDiscountAmount')) {
        obj['baseDiscountAmount'] = ApiClient.convertToType(data['baseDiscountAmount'], 'Number');
      }
      if (data.hasOwnProperty('baseGrandTotal')) {
        obj['baseGrandTotal'] = ApiClient.convertToType(data['baseGrandTotal'], 'Number');
      }
      if (data.hasOwnProperty('baseDiscountTaxCompensationAmount')) {
        obj['baseDiscountTaxCompensationAmount'] = ApiClient.convertToType(data['baseDiscountTaxCompensationAmount'], 'Number');
      }
      if (data.hasOwnProperty('baseShippingAmount')) {
        obj['baseShippingAmount'] = ApiClient.convertToType(data['baseShippingAmount'], 'Number');
      }
      if (data.hasOwnProperty('baseShippingDiscountTaxCompensationAmnt')) {
        obj['baseShippingDiscountTaxCompensationAmnt'] = ApiClient.convertToType(data['baseShippingDiscountTaxCompensationAmnt'], 'Number');
      }
      if (data.hasOwnProperty('baseShippingInclTax')) {
        obj['baseShippingInclTax'] = ApiClient.convertToType(data['baseShippingInclTax'], 'Number');
      }
      if (data.hasOwnProperty('baseShippingTaxAmount')) {
        obj['baseShippingTaxAmount'] = ApiClient.convertToType(data['baseShippingTaxAmount'], 'Number');
      }
      if (data.hasOwnProperty('baseSubtotal')) {
        obj['baseSubtotal'] = ApiClient.convertToType(data['baseSubtotal'], 'Number');
      }
      if (data.hasOwnProperty('baseSubtotalInclTax')) {
        obj['baseSubtotalInclTax'] = ApiClient.convertToType(data['baseSubtotalInclTax'], 'Number');
      }
      if (data.hasOwnProperty('baseTaxAmount')) {
        obj['baseTaxAmount'] = ApiClient.convertToType(data['baseTaxAmount'], 'Number');
      }
      if (data.hasOwnProperty('baseTotalRefunded')) {
        obj['baseTotalRefunded'] = ApiClient.convertToType(data['baseTotalRefunded'], 'Number');
      }
      if (data.hasOwnProperty('baseToGlobalRate')) {
        obj['baseToGlobalRate'] = ApiClient.convertToType(data['baseToGlobalRate'], 'Number');
      }
      if (data.hasOwnProperty('baseToOrderRate')) {
        obj['baseToOrderRate'] = ApiClient.convertToType(data['baseToOrderRate'], 'Number');
      }
      if (data.hasOwnProperty('billingAddressId')) {
        obj['billingAddressId'] = ApiClient.convertToType(data['billingAddressId'], 'Number');
      }
      if (data.hasOwnProperty('canVoidFlag')) {
        obj['canVoidFlag'] = ApiClient.convertToType(data['canVoidFlag'], 'Number');
      }
      if (data.hasOwnProperty('createdAt')) {
        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
      }
      if (data.hasOwnProperty('discountAmount')) {
        obj['discountAmount'] = ApiClient.convertToType(data['discountAmount'], 'Number');
      }
      if (data.hasOwnProperty('discountDescription')) {
        obj['discountDescription'] = ApiClient.convertToType(data['discountDescription'], 'String');
      }
      if (data.hasOwnProperty('emailSent')) {
        obj['emailSent'] = ApiClient.convertToType(data['emailSent'], 'Number');
      }
      if (data.hasOwnProperty('entityId')) {
        obj['entityId'] = ApiClient.convertToType(data['entityId'], 'Number');
      }
      if (data.hasOwnProperty('globalCurrencyCode')) {
        obj['globalCurrencyCode'] = ApiClient.convertToType(data['globalCurrencyCode'], 'String');
      }
      if (data.hasOwnProperty('grandTotal')) {
        obj['grandTotal'] = ApiClient.convertToType(data['grandTotal'], 'Number');
      }
      if (data.hasOwnProperty('discountTaxCompensationAmount')) {
        obj['discountTaxCompensationAmount'] = ApiClient.convertToType(data['discountTaxCompensationAmount'], 'Number');
      }
      if (data.hasOwnProperty('incrementId')) {
        obj['incrementId'] = ApiClient.convertToType(data['incrementId'], 'String');
      }
      if (data.hasOwnProperty('isUsedForRefund')) {
        obj['isUsedForRefund'] = ApiClient.convertToType(data['isUsedForRefund'], 'Number');
      }
      if (data.hasOwnProperty('orderCurrencyCode')) {
        obj['orderCurrencyCode'] = ApiClient.convertToType(data['orderCurrencyCode'], 'String');
      }
      if (data.hasOwnProperty('orderId')) {
        obj['orderId'] = ApiClient.convertToType(data['orderId'], 'Number');
      }
      if (data.hasOwnProperty('shippingAddressId')) {
        obj['shippingAddressId'] = ApiClient.convertToType(data['shippingAddressId'], 'Number');
      }
      if (data.hasOwnProperty('shippingAmount')) {
        obj['shippingAmount'] = ApiClient.convertToType(data['shippingAmount'], 'Number');
      }
      if (data.hasOwnProperty('shippingDiscountTaxCompensationAmount')) {
        obj['shippingDiscountTaxCompensationAmount'] = ApiClient.convertToType(data['shippingDiscountTaxCompensationAmount'], 'Number');
      }
      if (data.hasOwnProperty('shippingInclTax')) {
        obj['shippingInclTax'] = ApiClient.convertToType(data['shippingInclTax'], 'Number');
      }
      if (data.hasOwnProperty('shippingTaxAmount')) {
        obj['shippingTaxAmount'] = ApiClient.convertToType(data['shippingTaxAmount'], 'Number');
      }
      if (data.hasOwnProperty('state')) {
        obj['state'] = ApiClient.convertToType(data['state'], 'Number');
      }
      if (data.hasOwnProperty('storeCurrencyCode')) {
        obj['storeCurrencyCode'] = ApiClient.convertToType(data['storeCurrencyCode'], 'String');
      }
      if (data.hasOwnProperty('storeId')) {
        obj['storeId'] = ApiClient.convertToType(data['storeId'], 'Number');
      }
      if (data.hasOwnProperty('storeToBaseRate')) {
        obj['storeToBaseRate'] = ApiClient.convertToType(data['storeToBaseRate'], 'Number');
      }
      if (data.hasOwnProperty('storeToOrderRate')) {
        obj['storeToOrderRate'] = ApiClient.convertToType(data['storeToOrderRate'], 'Number');
      }
      if (data.hasOwnProperty('subtotal')) {
        obj['subtotal'] = ApiClient.convertToType(data['subtotal'], 'Number');
      }
      if (data.hasOwnProperty('subtotalInclTax')) {
        obj['subtotalInclTax'] = ApiClient.convertToType(data['subtotalInclTax'], 'Number');
      }
      if (data.hasOwnProperty('taxAmount')) {
        obj['taxAmount'] = ApiClient.convertToType(data['taxAmount'], 'Number');
      }
      if (data.hasOwnProperty('totalQty')) {
        obj['totalQty'] = ApiClient.convertToType(data['totalQty'], 'Number');
      }
      if (data.hasOwnProperty('transactionId')) {
        obj['transactionId'] = ApiClient.convertToType(data['transactionId'], 'String');
      }
      if (data.hasOwnProperty('updatedAt')) {
        obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');
      }
      if (data.hasOwnProperty('items')) {
        obj['items'] = ApiClient.convertToType(data['items'], [SalesDataInvoiceItemInterface]);
      }
      if (data.hasOwnProperty('comments')) {
        obj['comments'] = ApiClient.convertToType(data['comments'], [SalesDataInvoiceCommentInterface]);
      }
      if (data.hasOwnProperty('extensionAttributes')) {
        obj['extensionAttributes'] = SalesDataInvoiceExtensionInterface.constructFromObject(data['extensionAttributes']);
      }
    }
    return obj;
  }

  /**
   * Base currency code.
   * @member {String} baseCurrencyCode
   */
  exports.prototype['baseCurrencyCode'] = undefined;
  /**
   * Base discount amount.
   * @member {Number} baseDiscountAmount
   */
  exports.prototype['baseDiscountAmount'] = undefined;
  /**
   * Base grand total.
   * @member {Number} baseGrandTotal
   */
  exports.prototype['baseGrandTotal'] = undefined;
  /**
   * Base discount tax compensation amount.
   * @member {Number} baseDiscountTaxCompensationAmount
   */
  exports.prototype['baseDiscountTaxCompensationAmount'] = undefined;
  /**
   * Base shipping amount.
   * @member {Number} baseShippingAmount
   */
  exports.prototype['baseShippingAmount'] = undefined;
  /**
   * Base shipping discount tax compensation amount.
   * @member {Number} baseShippingDiscountTaxCompensationAmnt
   */
  exports.prototype['baseShippingDiscountTaxCompensationAmnt'] = undefined;
  /**
   * Base shipping including tax.
   * @member {Number} baseShippingInclTax
   */
  exports.prototype['baseShippingInclTax'] = undefined;
  /**
   * Base shipping tax amount.
   * @member {Number} baseShippingTaxAmount
   */
  exports.prototype['baseShippingTaxAmount'] = undefined;
  /**
   * Base subtotal.
   * @member {Number} baseSubtotal
   */
  exports.prototype['baseSubtotal'] = undefined;
  /**
   * Base subtotal including tax.
   * @member {Number} baseSubtotalInclTax
   */
  exports.prototype['baseSubtotalInclTax'] = undefined;
  /**
   * Base tax amount.
   * @member {Number} baseTaxAmount
   */
  exports.prototype['baseTaxAmount'] = undefined;
  /**
   * Base total refunded.
   * @member {Number} baseTotalRefunded
   */
  exports.prototype['baseTotalRefunded'] = undefined;
  /**
   * Base-to-global rate.
   * @member {Number} baseToGlobalRate
   */
  exports.prototype['baseToGlobalRate'] = undefined;
  /**
   * Base-to-order rate.
   * @member {Number} baseToOrderRate
   */
  exports.prototype['baseToOrderRate'] = undefined;
  /**
   * Billing address ID.
   * @member {Number} billingAddressId
   */
  exports.prototype['billingAddressId'] = undefined;
  /**
   * Can void flag value.
   * @member {Number} canVoidFlag
   */
  exports.prototype['canVoidFlag'] = undefined;
  /**
   * Created-at timestamp.
   * @member {String} createdAt
   */
  exports.prototype['createdAt'] = undefined;
  /**
   * Discount amount.
   * @member {Number} discountAmount
   */
  exports.prototype['discountAmount'] = undefined;
  /**
   * Discount description.
   * @member {String} discountDescription
   */
  exports.prototype['discountDescription'] = undefined;
  /**
   * Email-sent flag value.
   * @member {Number} emailSent
   */
  exports.prototype['emailSent'] = undefined;
  /**
   * Invoice ID.
   * @member {Number} entityId
   */
  exports.prototype['entityId'] = undefined;
  /**
   * Global currency code.
   * @member {String} globalCurrencyCode
   */
  exports.prototype['globalCurrencyCode'] = undefined;
  /**
   * Grand total.
   * @member {Number} grandTotal
   */
  exports.prototype['grandTotal'] = undefined;
  /**
   * Discount tax compensation amount.
   * @member {Number} discountTaxCompensationAmount
   */
  exports.prototype['discountTaxCompensationAmount'] = undefined;
  /**
   * Increment ID.
   * @member {String} incrementId
   */
  exports.prototype['incrementId'] = undefined;
  /**
   * Is-used-for-refund flag value.
   * @member {Number} isUsedForRefund
   */
  exports.prototype['isUsedForRefund'] = undefined;
  /**
   * Order currency code.
   * @member {String} orderCurrencyCode
   */
  exports.prototype['orderCurrencyCode'] = undefined;
  /**
   * Order ID.
   * @member {Number} orderId
   */
  exports.prototype['orderId'] = undefined;
  /**
   * Shipping address ID.
   * @member {Number} shippingAddressId
   */
  exports.prototype['shippingAddressId'] = undefined;
  /**
   * Shipping amount.
   * @member {Number} shippingAmount
   */
  exports.prototype['shippingAmount'] = undefined;
  /**
   * Shipping discount tax compensation amount.
   * @member {Number} shippingDiscountTaxCompensationAmount
   */
  exports.prototype['shippingDiscountTaxCompensationAmount'] = undefined;
  /**
   * Shipping including tax.
   * @member {Number} shippingInclTax
   */
  exports.prototype['shippingInclTax'] = undefined;
  /**
   * Shipping tax amount.
   * @member {Number} shippingTaxAmount
   */
  exports.prototype['shippingTaxAmount'] = undefined;
  /**
   * State.
   * @member {Number} state
   */
  exports.prototype['state'] = undefined;
  /**
   * Store currency code.
   * @member {String} storeCurrencyCode
   */
  exports.prototype['storeCurrencyCode'] = undefined;
  /**
   * Store ID.
   * @member {Number} storeId
   */
  exports.prototype['storeId'] = undefined;
  /**
   * Store-to-base rate.
   * @member {Number} storeToBaseRate
   */
  exports.prototype['storeToBaseRate'] = undefined;
  /**
   * Store-to-order rate.
   * @member {Number} storeToOrderRate
   */
  exports.prototype['storeToOrderRate'] = undefined;
  /**
   * Subtotal.
   * @member {Number} subtotal
   */
  exports.prototype['subtotal'] = undefined;
  /**
   * Subtotal including tax.
   * @member {Number} subtotalInclTax
   */
  exports.prototype['subtotalInclTax'] = undefined;
  /**
   * Tax amount.
   * @member {Number} taxAmount
   */
  exports.prototype['taxAmount'] = undefined;
  /**
   * Total quantity.
   * @member {Number} totalQty
   */
  exports.prototype['totalQty'] = undefined;
  /**
   * Transaction ID.
   * @member {String} transactionId
   */
  exports.prototype['transactionId'] = undefined;
  /**
   * Updated-at timestamp.
   * @member {String} updatedAt
   */
  exports.prototype['updatedAt'] = undefined;
  /**
   * Array of invoice items.
   * @member {Array.<module:model/SalesDataInvoiceItemInterface>} items
   */
  exports.prototype['items'] = undefined;
  /**
   * Array of any invoice comments. Otherwise, null.
   * @member {Array.<module:model/SalesDataInvoiceCommentInterface>} comments
   */
  exports.prototype['comments'] = undefined;
  /**
   * @member {module:model/SalesDataInvoiceExtensionInterface} extensionAttributes
   */
  exports.prototype['extensionAttributes'] = undefined;



  return exports;
}));



/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/TaxDataTaxRuleExtensionInterface'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./TaxDataTaxRuleExtensionInterface'));
  } else {
    // Browser globals (root is window)
    if (!root.magento) {
      root.magento = {};
    }
    root.magento.TaxDataTaxRuleInterface = factory(root.magento.ApiClient, root.magento.TaxDataTaxRuleExtensionInterface);
  }
}(this, function(ApiClient, TaxDataTaxRuleExtensionInterface) {
  'use strict';




  /**
   * The TaxDataTaxRuleInterface model module.
   * @module model/TaxDataTaxRuleInterface
   * @version 2.0
   */

  /**
   * Constructs a new <code>TaxDataTaxRuleInterface</code>.
   * Tax rule interface.
   * @alias module:model/TaxDataTaxRuleInterface
   * @class
   * @param code {String} Tax rule code
   * @param priority {Number} Priority
   * @param position {Number} Sort order.
   * @param customerTaxClassIds {Array.<Number>} Customer tax class id
   * @param productTaxClassIds {Array.<Number>} Product tax class id
   * @param taxRateIds {Array.<Number>} Tax rate ids
   */
  var exports = function(code, priority, position, customerTaxClassIds, productTaxClassIds, taxRateIds) {
    var _this = this;


    _this['code'] = code;
    _this['priority'] = priority;
    _this['position'] = position;
    _this['customerTaxClassIds'] = customerTaxClassIds;
    _this['productTaxClassIds'] = productTaxClassIds;
    _this['taxRateIds'] = taxRateIds;


  };

  /**
   * Constructs a <code>TaxDataTaxRuleInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TaxDataTaxRuleInterface} obj Optional instance to populate.
   * @return {module:model/TaxDataTaxRuleInterface} The populated <code>TaxDataTaxRuleInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('code')) {
        obj['code'] = ApiClient.convertToType(data['code'], 'String');
      }
      if (data.hasOwnProperty('priority')) {
        obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
      }
      if (data.hasOwnProperty('position')) {
        obj['position'] = ApiClient.convertToType(data['position'], 'Number');
      }
      if (data.hasOwnProperty('customerTaxClassIds')) {
        obj['customerTaxClassIds'] = ApiClient.convertToType(data['customerTaxClassIds'], ['Number']);
      }
      if (data.hasOwnProperty('productTaxClassIds')) {
        obj['productTaxClassIds'] = ApiClient.convertToType(data['productTaxClassIds'], ['Number']);
      }
      if (data.hasOwnProperty('taxRateIds')) {
        obj['taxRateIds'] = ApiClient.convertToType(data['taxRateIds'], ['Number']);
      }
      if (data.hasOwnProperty('calculateSubtotal')) {
        obj['calculateSubtotal'] = ApiClient.convertToType(data['calculateSubtotal'], 'Boolean');
      }
      if (data.hasOwnProperty('extensionAttributes')) {
        obj['extensionAttributes'] = TaxDataTaxRuleExtensionInterface.constructFromObject(data['extensionAttributes']);
      }
    }
    return obj;
  }

  /**
   * Id
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Tax rule code
   * @member {String} code
   */
  exports.prototype['code'] = undefined;
  /**
   * Priority
   * @member {Number} priority
   */
  exports.prototype['priority'] = undefined;
  /**
   * Sort order.
   * @member {Number} position
   */
  exports.prototype['position'] = undefined;
  /**
   * Customer tax class id
   * @member {Array.<Number>} customerTaxClassIds
   */
  exports.prototype['customerTaxClassIds'] = undefined;
  /**
   * Product tax class id
   * @member {Array.<Number>} productTaxClassIds
   */
  exports.prototype['productTaxClassIds'] = undefined;
  /**
   * Tax rate ids
   * @member {Array.<Number>} taxRateIds
   */
  exports.prototype['taxRateIds'] = undefined;
  /**
   * Calculate subtotal.
   * @member {Boolean} calculateSubtotal
   */
  exports.prototype['calculateSubtotal'] = undefined;
  /**
   * @member {module:model/TaxDataTaxRuleExtensionInterface} extensionAttributes
   */
  exports.prototype['extensionAttributes'] = undefined;



  return exports;
}));



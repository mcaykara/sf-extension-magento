/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SalesDataOrderAddressExtensionInterface'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SalesDataOrderAddressExtensionInterface'));
  } else {
    // Browser globals (root is window)
    if (!root.magento) {
      root.magento = {};
    }
    root.magento.SalesDataOrderAddressInterface = factory(root.magento.ApiClient, root.magento.SalesDataOrderAddressExtensionInterface);
  }
}(this, function(ApiClient, SalesDataOrderAddressExtensionInterface) {
  'use strict';




  /**
   * The SalesDataOrderAddressInterface model module.
   * @module model/SalesDataOrderAddressInterface
   * @version 2.0
   */

  /**
   * Constructs a new <code>SalesDataOrderAddressInterface</code>.
   * Order address interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.
   * @alias module:model/SalesDataOrderAddressInterface
   * @class
   * @param addressType {String} Address type.
   * @param city {String} City.
   * @param countryId {String} Country ID.
   * @param firstname {String} First name.
   * @param lastname {String} Last name.
   * @param postcode {String} Postal code.
   * @param telephone {String} Telephone number.
   */
  var exports = function(addressType, city, countryId, firstname, lastname, postcode, telephone) {
    var _this = this;

    _this['addressType'] = addressType;
    _this['city'] = city;

    _this['countryId'] = countryId;





    _this['firstname'] = firstname;
    _this['lastname'] = lastname;


    _this['postcode'] = postcode;






    _this['telephone'] = telephone;






  };

  /**
   * Constructs a <code>SalesDataOrderAddressInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SalesDataOrderAddressInterface} obj Optional instance to populate.
   * @return {module:model/SalesDataOrderAddressInterface} The populated <code>SalesDataOrderAddressInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('addressType')) {
        obj['addressType'] = ApiClient.convertToType(data['addressType'], 'String');
      }
      if (data.hasOwnProperty('city')) {
        obj['city'] = ApiClient.convertToType(data['city'], 'String');
      }
      if (data.hasOwnProperty('company')) {
        obj['company'] = ApiClient.convertToType(data['company'], 'String');
      }
      if (data.hasOwnProperty('countryId')) {
        obj['countryId'] = ApiClient.convertToType(data['countryId'], 'String');
      }
      if (data.hasOwnProperty('customerAddressId')) {
        obj['customerAddressId'] = ApiClient.convertToType(data['customerAddressId'], 'Number');
      }
      if (data.hasOwnProperty('customerId')) {
        obj['customerId'] = ApiClient.convertToType(data['customerId'], 'Number');
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('entityId')) {
        obj['entityId'] = ApiClient.convertToType(data['entityId'], 'Number');
      }
      if (data.hasOwnProperty('fax')) {
        obj['fax'] = ApiClient.convertToType(data['fax'], 'String');
      }
      if (data.hasOwnProperty('firstname')) {
        obj['firstname'] = ApiClient.convertToType(data['firstname'], 'String');
      }
      if (data.hasOwnProperty('lastname')) {
        obj['lastname'] = ApiClient.convertToType(data['lastname'], 'String');
      }
      if (data.hasOwnProperty('middlename')) {
        obj['middlename'] = ApiClient.convertToType(data['middlename'], 'String');
      }
      if (data.hasOwnProperty('parentId')) {
        obj['parentId'] = ApiClient.convertToType(data['parentId'], 'Number');
      }
      if (data.hasOwnProperty('postcode')) {
        obj['postcode'] = ApiClient.convertToType(data['postcode'], 'String');
      }
      if (data.hasOwnProperty('prefix')) {
        obj['prefix'] = ApiClient.convertToType(data['prefix'], 'String');
      }
      if (data.hasOwnProperty('region')) {
        obj['region'] = ApiClient.convertToType(data['region'], 'String');
      }
      if (data.hasOwnProperty('regionCode')) {
        obj['regionCode'] = ApiClient.convertToType(data['regionCode'], 'String');
      }
      if (data.hasOwnProperty('regionId')) {
        obj['regionId'] = ApiClient.convertToType(data['regionId'], 'Number');
      }
      if (data.hasOwnProperty('street')) {
        obj['street'] = ApiClient.convertToType(data['street'], ['String']);
      }
      if (data.hasOwnProperty('suffix')) {
        obj['suffix'] = ApiClient.convertToType(data['suffix'], 'String');
      }
      if (data.hasOwnProperty('telephone')) {
        obj['telephone'] = ApiClient.convertToType(data['telephone'], 'String');
      }
      if (data.hasOwnProperty('vatId')) {
        obj['vatId'] = ApiClient.convertToType(data['vatId'], 'String');
      }
      if (data.hasOwnProperty('vatIsValid')) {
        obj['vatIsValid'] = ApiClient.convertToType(data['vatIsValid'], 'Number');
      }
      if (data.hasOwnProperty('vatRequestDate')) {
        obj['vatRequestDate'] = ApiClient.convertToType(data['vatRequestDate'], 'String');
      }
      if (data.hasOwnProperty('vatRequestId')) {
        obj['vatRequestId'] = ApiClient.convertToType(data['vatRequestId'], 'String');
      }
      if (data.hasOwnProperty('vatRequestSuccess')) {
        obj['vatRequestSuccess'] = ApiClient.convertToType(data['vatRequestSuccess'], 'Number');
      }
      if (data.hasOwnProperty('extensionAttributes')) {
        obj['extensionAttributes'] = SalesDataOrderAddressExtensionInterface.constructFromObject(data['extensionAttributes']);
      }
    }
    return obj;
  }

  /**
   * Address type.
   * @member {String} addressType
   */
  exports.prototype['addressType'] = undefined;
  /**
   * City.
   * @member {String} city
   */
  exports.prototype['city'] = undefined;
  /**
   * Company.
   * @member {String} company
   */
  exports.prototype['company'] = undefined;
  /**
   * Country ID.
   * @member {String} countryId
   */
  exports.prototype['countryId'] = undefined;
  /**
   * Country address ID.
   * @member {Number} customerAddressId
   */
  exports.prototype['customerAddressId'] = undefined;
  /**
   * Customer ID.
   * @member {Number} customerId
   */
  exports.prototype['customerId'] = undefined;
  /**
   * Email address.
   * @member {String} email
   */
  exports.prototype['email'] = undefined;
  /**
   * Order address ID.
   * @member {Number} entityId
   */
  exports.prototype['entityId'] = undefined;
  /**
   * Fax number.
   * @member {String} fax
   */
  exports.prototype['fax'] = undefined;
  /**
   * First name.
   * @member {String} firstname
   */
  exports.prototype['firstname'] = undefined;
  /**
   * Last name.
   * @member {String} lastname
   */
  exports.prototype['lastname'] = undefined;
  /**
   * Middle name.
   * @member {String} middlename
   */
  exports.prototype['middlename'] = undefined;
  /**
   * Parent ID.
   * @member {Number} parentId
   */
  exports.prototype['parentId'] = undefined;
  /**
   * Postal code.
   * @member {String} postcode
   */
  exports.prototype['postcode'] = undefined;
  /**
   * Prefix.
   * @member {String} prefix
   */
  exports.prototype['prefix'] = undefined;
  /**
   * Region.
   * @member {String} region
   */
  exports.prototype['region'] = undefined;
  /**
   * Region code.
   * @member {String} regionCode
   */
  exports.prototype['regionCode'] = undefined;
  /**
   * Region ID.
   * @member {Number} regionId
   */
  exports.prototype['regionId'] = undefined;
  /**
   * Array of any street values. Otherwise, null.
   * @member {Array.<String>} street
   */
  exports.prototype['street'] = undefined;
  /**
   * Suffix.
   * @member {String} suffix
   */
  exports.prototype['suffix'] = undefined;
  /**
   * Telephone number.
   * @member {String} telephone
   */
  exports.prototype['telephone'] = undefined;
  /**
   * VAT ID.
   * @member {String} vatId
   */
  exports.prototype['vatId'] = undefined;
  /**
   * VAT-is-valid flag value.
   * @member {Number} vatIsValid
   */
  exports.prototype['vatIsValid'] = undefined;
  /**
   * VAT request date.
   * @member {String} vatRequestDate
   */
  exports.prototype['vatRequestDate'] = undefined;
  /**
   * VAT request ID.
   * @member {String} vatRequestId
   */
  exports.prototype['vatRequestId'] = undefined;
  /**
   * VAT-request-success flag value.
   * @member {Number} vatRequestSuccess
   */
  exports.prototype['vatRequestSuccess'] = undefined;
  /**
   * @member {module:model/SalesDataOrderAddressExtensionInterface} extensionAttributes
   */
  exports.prototype['extensionAttributes'] = undefined;



  return exports;
}));



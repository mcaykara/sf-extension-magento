/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SalesDataInvoiceItemExtensionInterface'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SalesDataInvoiceItemExtensionInterface'));
  } else {
    // Browser globals (root is window)
    if (!root.magento) {
      root.magento = {};
    }
    root.magento.SalesDataInvoiceItemInterface = factory(root.magento.ApiClient, root.magento.SalesDataInvoiceItemExtensionInterface);
  }
}(this, function(ApiClient, SalesDataInvoiceItemExtensionInterface) {
  'use strict';




  /**
   * The SalesDataInvoiceItemInterface model module.
   * @module model/SalesDataInvoiceItemInterface
   * @version 2.0
   */

  /**
   * Constructs a new <code>SalesDataInvoiceItemInterface</code>.
   * Invoice item interface. An invoice is a record of the receipt of payment for an order. An invoice item is a purchased item in an invoice.
   * @alias module:model/SalesDataInvoiceItemInterface
   * @class
   * @param sku {String} SKU.
   * @param orderItemId {Number} Order item ID.
   * @param qty {Number} Quantity.
   */
  var exports = function(sku, orderItemId, qty) {
    var _this = this;





















    _this['sku'] = sku;


    _this['orderItemId'] = orderItemId;
    _this['qty'] = qty;
  };

  /**
   * Constructs a <code>SalesDataInvoiceItemInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SalesDataInvoiceItemInterface} obj Optional instance to populate.
   * @return {module:model/SalesDataInvoiceItemInterface} The populated <code>SalesDataInvoiceItemInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('additionalData')) {
        obj['additionalData'] = ApiClient.convertToType(data['additionalData'], 'String');
      }
      if (data.hasOwnProperty('baseCost')) {
        obj['baseCost'] = ApiClient.convertToType(data['baseCost'], 'Number');
      }
      if (data.hasOwnProperty('baseDiscountAmount')) {
        obj['baseDiscountAmount'] = ApiClient.convertToType(data['baseDiscountAmount'], 'Number');
      }
      if (data.hasOwnProperty('baseDiscountTaxCompensationAmount')) {
        obj['baseDiscountTaxCompensationAmount'] = ApiClient.convertToType(data['baseDiscountTaxCompensationAmount'], 'Number');
      }
      if (data.hasOwnProperty('basePrice')) {
        obj['basePrice'] = ApiClient.convertToType(data['basePrice'], 'Number');
      }
      if (data.hasOwnProperty('basePriceInclTax')) {
        obj['basePriceInclTax'] = ApiClient.convertToType(data['basePriceInclTax'], 'Number');
      }
      if (data.hasOwnProperty('baseRowTotal')) {
        obj['baseRowTotal'] = ApiClient.convertToType(data['baseRowTotal'], 'Number');
      }
      if (data.hasOwnProperty('baseRowTotalInclTax')) {
        obj['baseRowTotalInclTax'] = ApiClient.convertToType(data['baseRowTotalInclTax'], 'Number');
      }
      if (data.hasOwnProperty('baseTaxAmount')) {
        obj['baseTaxAmount'] = ApiClient.convertToType(data['baseTaxAmount'], 'Number');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('discountAmount')) {
        obj['discountAmount'] = ApiClient.convertToType(data['discountAmount'], 'Number');
      }
      if (data.hasOwnProperty('entityId')) {
        obj['entityId'] = ApiClient.convertToType(data['entityId'], 'Number');
      }
      if (data.hasOwnProperty('discountTaxCompensationAmount')) {
        obj['discountTaxCompensationAmount'] = ApiClient.convertToType(data['discountTaxCompensationAmount'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('parentId')) {
        obj['parentId'] = ApiClient.convertToType(data['parentId'], 'Number');
      }
      if (data.hasOwnProperty('price')) {
        obj['price'] = ApiClient.convertToType(data['price'], 'Number');
      }
      if (data.hasOwnProperty('priceInclTax')) {
        obj['priceInclTax'] = ApiClient.convertToType(data['priceInclTax'], 'Number');
      }
      if (data.hasOwnProperty('productId')) {
        obj['productId'] = ApiClient.convertToType(data['productId'], 'Number');
      }
      if (data.hasOwnProperty('rowTotal')) {
        obj['rowTotal'] = ApiClient.convertToType(data['rowTotal'], 'Number');
      }
      if (data.hasOwnProperty('rowTotalInclTax')) {
        obj['rowTotalInclTax'] = ApiClient.convertToType(data['rowTotalInclTax'], 'Number');
      }
      if (data.hasOwnProperty('sku')) {
        obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
      }
      if (data.hasOwnProperty('taxAmount')) {
        obj['taxAmount'] = ApiClient.convertToType(data['taxAmount'], 'Number');
      }
      if (data.hasOwnProperty('extensionAttributes')) {
        obj['extensionAttributes'] = SalesDataInvoiceItemExtensionInterface.constructFromObject(data['extensionAttributes']);
      }
      if (data.hasOwnProperty('orderItemId')) {
        obj['orderItemId'] = ApiClient.convertToType(data['orderItemId'], 'Number');
      }
      if (data.hasOwnProperty('qty')) {
        obj['qty'] = ApiClient.convertToType(data['qty'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Additional data.
   * @member {String} additionalData
   */
  exports.prototype['additionalData'] = undefined;
  /**
   * Base cost.
   * @member {Number} baseCost
   */
  exports.prototype['baseCost'] = undefined;
  /**
   * Base discount amount.
   * @member {Number} baseDiscountAmount
   */
  exports.prototype['baseDiscountAmount'] = undefined;
  /**
   * Base discount tax compensation amount.
   * @member {Number} baseDiscountTaxCompensationAmount
   */
  exports.prototype['baseDiscountTaxCompensationAmount'] = undefined;
  /**
   * Base price.
   * @member {Number} basePrice
   */
  exports.prototype['basePrice'] = undefined;
  /**
   * Base price including tax.
   * @member {Number} basePriceInclTax
   */
  exports.prototype['basePriceInclTax'] = undefined;
  /**
   * Base row total.
   * @member {Number} baseRowTotal
   */
  exports.prototype['baseRowTotal'] = undefined;
  /**
   * Base row total including tax.
   * @member {Number} baseRowTotalInclTax
   */
  exports.prototype['baseRowTotalInclTax'] = undefined;
  /**
   * Base tax amount.
   * @member {Number} baseTaxAmount
   */
  exports.prototype['baseTaxAmount'] = undefined;
  /**
   * Description.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * Discount amount.
   * @member {Number} discountAmount
   */
  exports.prototype['discountAmount'] = undefined;
  /**
   * Invoice item ID.
   * @member {Number} entityId
   */
  exports.prototype['entityId'] = undefined;
  /**
   * Discount tax compensation amount.
   * @member {Number} discountTaxCompensationAmount
   */
  exports.prototype['discountTaxCompensationAmount'] = undefined;
  /**
   * Name.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Parent ID.
   * @member {Number} parentId
   */
  exports.prototype['parentId'] = undefined;
  /**
   * Price.
   * @member {Number} price
   */
  exports.prototype['price'] = undefined;
  /**
   * Price including tax.
   * @member {Number} priceInclTax
   */
  exports.prototype['priceInclTax'] = undefined;
  /**
   * Product ID.
   * @member {Number} productId
   */
  exports.prototype['productId'] = undefined;
  /**
   * Row total.
   * @member {Number} rowTotal
   */
  exports.prototype['rowTotal'] = undefined;
  /**
   * Row total including tax.
   * @member {Number} rowTotalInclTax
   */
  exports.prototype['rowTotalInclTax'] = undefined;
  /**
   * SKU.
   * @member {String} sku
   */
  exports.prototype['sku'] = undefined;
  /**
   * Tax amount.
   * @member {Number} taxAmount
   */
  exports.prototype['taxAmount'] = undefined;
  /**
   * @member {module:model/SalesDataInvoiceItemExtensionInterface} extensionAttributes
   */
  exports.prototype['extensionAttributes'] = undefined;
  /**
   * Order item ID.
   * @member {Number} orderItemId
   */
  exports.prototype['orderItemId'] = undefined;
  /**
   * Quantity.
   * @member {Number} qty
   */
  exports.prototype['qty'] = undefined;



  return exports;
}));



/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SalesDataShipmentItemExtensionInterface'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SalesDataShipmentItemExtensionInterface'));
  } else {
    // Browser globals (root is window)
    if (!root.magento) {
      root.magento = {};
    }
    root.magento.SalesDataShipmentItemInterface = factory(root.magento.ApiClient, root.magento.SalesDataShipmentItemExtensionInterface);
  }
}(this, function(ApiClient, SalesDataShipmentItemExtensionInterface) {
  'use strict';




  /**
   * The SalesDataShipmentItemInterface model module.
   * @module model/SalesDataShipmentItemInterface
   * @version 2.0
   */

  /**
   * Constructs a new <code>SalesDataShipmentItemInterface</code>.
   * Shipment item interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A product is an item in a shipment.
   * @alias module:model/SalesDataShipmentItemInterface
   * @class
   * @param orderItemId {Number} Order item ID.
   * @param qty {Number} Quantity.
   */
  var exports = function(orderItemId, qty) {
    var _this = this;












    _this['orderItemId'] = orderItemId;
    _this['qty'] = qty;
  };

  /**
   * Constructs a <code>SalesDataShipmentItemInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SalesDataShipmentItemInterface} obj Optional instance to populate.
   * @return {module:model/SalesDataShipmentItemInterface} The populated <code>SalesDataShipmentItemInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('additionalData')) {
        obj['additionalData'] = ApiClient.convertToType(data['additionalData'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('entityId')) {
        obj['entityId'] = ApiClient.convertToType(data['entityId'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('parentId')) {
        obj['parentId'] = ApiClient.convertToType(data['parentId'], 'Number');
      }
      if (data.hasOwnProperty('price')) {
        obj['price'] = ApiClient.convertToType(data['price'], 'Number');
      }
      if (data.hasOwnProperty('productId')) {
        obj['productId'] = ApiClient.convertToType(data['productId'], 'Number');
      }
      if (data.hasOwnProperty('rowTotal')) {
        obj['rowTotal'] = ApiClient.convertToType(data['rowTotal'], 'Number');
      }
      if (data.hasOwnProperty('sku')) {
        obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
      }
      if (data.hasOwnProperty('weight')) {
        obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
      }
      if (data.hasOwnProperty('extensionAttributes')) {
        obj['extensionAttributes'] = SalesDataShipmentItemExtensionInterface.constructFromObject(data['extensionAttributes']);
      }
      if (data.hasOwnProperty('orderItemId')) {
        obj['orderItemId'] = ApiClient.convertToType(data['orderItemId'], 'Number');
      }
      if (data.hasOwnProperty('qty')) {
        obj['qty'] = ApiClient.convertToType(data['qty'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Additional data.
   * @member {String} additionalData
   */
  exports.prototype['additionalData'] = undefined;
  /**
   * Description.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * Shipment item ID.
   * @member {Number} entityId
   */
  exports.prototype['entityId'] = undefined;
  /**
   * Name.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Parent ID.
   * @member {Number} parentId
   */
  exports.prototype['parentId'] = undefined;
  /**
   * Price.
   * @member {Number} price
   */
  exports.prototype['price'] = undefined;
  /**
   * Product ID.
   * @member {Number} productId
   */
  exports.prototype['productId'] = undefined;
  /**
   * Row total.
   * @member {Number} rowTotal
   */
  exports.prototype['rowTotal'] = undefined;
  /**
   * SKU.
   * @member {String} sku
   */
  exports.prototype['sku'] = undefined;
  /**
   * Weight.
   * @member {Number} weight
   */
  exports.prototype['weight'] = undefined;
  /**
   * @member {module:model/SalesDataShipmentItemExtensionInterface} extensionAttributes
   */
  exports.prototype['extensionAttributes'] = undefined;
  /**
   * Order item ID.
   * @member {Number} orderItemId
   */
  exports.prototype['orderItemId'] = undefined;
  /**
   * Quantity.
   * @member {Number} qty
   */
  exports.prototype['qty'] = undefined;



  return exports;
}));



/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SalesRuleDataCouponExtensionInterface'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SalesRuleDataCouponExtensionInterface'));
  } else {
    // Browser globals (root is window)
    if (!root.magento) {
      root.magento = {};
    }
    root.magento.SalesRuleDataCouponInterface = factory(root.magento.ApiClient, root.magento.SalesRuleDataCouponExtensionInterface);
  }
}(this, function(ApiClient, SalesRuleDataCouponExtensionInterface) {
  'use strict';




  /**
   * The SalesRuleDataCouponInterface model module.
   * @module model/SalesRuleDataCouponInterface
   * @version 2.0
   */

  /**
   * Constructs a new <code>SalesRuleDataCouponInterface</code>.
   * Interface CouponInterface
   * @alias module:model/SalesRuleDataCouponInterface
   * @class
   * @param ruleId {Number} The id of the rule associated with the coupon
   * @param timesUsed {Number} The number of times the coupon has been used
   * @param isPrimary {Boolean} The coupon is primary coupon for the rule that it's associated with
   */
  var exports = function(ruleId, timesUsed, isPrimary) {
    var _this = this;


    _this['ruleId'] = ruleId;



    _this['timesUsed'] = timesUsed;

    _this['isPrimary'] = isPrimary;



  };

  /**
   * Constructs a <code>SalesRuleDataCouponInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SalesRuleDataCouponInterface} obj Optional instance to populate.
   * @return {module:model/SalesRuleDataCouponInterface} The populated <code>SalesRuleDataCouponInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('couponId')) {
        obj['couponId'] = ApiClient.convertToType(data['couponId'], 'Number');
      }
      if (data.hasOwnProperty('ruleId')) {
        obj['ruleId'] = ApiClient.convertToType(data['ruleId'], 'Number');
      }
      if (data.hasOwnProperty('code')) {
        obj['code'] = ApiClient.convertToType(data['code'], 'String');
      }
      if (data.hasOwnProperty('usageLimit')) {
        obj['usageLimit'] = ApiClient.convertToType(data['usageLimit'], 'Number');
      }
      if (data.hasOwnProperty('usagePerCustomer')) {
        obj['usagePerCustomer'] = ApiClient.convertToType(data['usagePerCustomer'], 'Number');
      }
      if (data.hasOwnProperty('timesUsed')) {
        obj['timesUsed'] = ApiClient.convertToType(data['timesUsed'], 'Number');
      }
      if (data.hasOwnProperty('expirationDate')) {
        obj['expirationDate'] = ApiClient.convertToType(data['expirationDate'], 'String');
      }
      if (data.hasOwnProperty('isPrimary')) {
        obj['isPrimary'] = ApiClient.convertToType(data['isPrimary'], 'Boolean');
      }
      if (data.hasOwnProperty('createdAt')) {
        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'Number');
      }
      if (data.hasOwnProperty('extensionAttributes')) {
        obj['extensionAttributes'] = SalesRuleDataCouponExtensionInterface.constructFromObject(data['extensionAttributes']);
      }
    }
    return obj;
  }

  /**
   * Coupon id
   * @member {Number} couponId
   */
  exports.prototype['couponId'] = undefined;
  /**
   * The id of the rule associated with the coupon
   * @member {Number} ruleId
   */
  exports.prototype['ruleId'] = undefined;
  /**
   * Coupon code
   * @member {String} code
   */
  exports.prototype['code'] = undefined;
  /**
   * Usage limit
   * @member {Number} usageLimit
   */
  exports.prototype['usageLimit'] = undefined;
  /**
   * Usage limit per customer
   * @member {Number} usagePerCustomer
   */
  exports.prototype['usagePerCustomer'] = undefined;
  /**
   * The number of times the coupon has been used
   * @member {Number} timesUsed
   */
  exports.prototype['timesUsed'] = undefined;
  /**
   * Expiration date
   * @member {String} expirationDate
   */
  exports.prototype['expirationDate'] = undefined;
  /**
   * The coupon is primary coupon for the rule that it's associated with
   * @member {Boolean} isPrimary
   */
  exports.prototype['isPrimary'] = undefined;
  /**
   * When the coupon is created
   * @member {String} createdAt
   */
  exports.prototype['createdAt'] = undefined;
  /**
   * Of coupon
   * @member {Number} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {module:model/SalesRuleDataCouponExtensionInterface} extensionAttributes
   */
  exports.prototype['extensionAttributes'] = undefined;



  return exports;
}));



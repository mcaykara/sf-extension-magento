/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/QuoteDataShippingMethodExtensionInterface'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./QuoteDataShippingMethodExtensionInterface'));
  } else {
    // Browser globals (root is window)
    if (!root.magento) {
      root.magento = {};
    }
    root.magento.QuoteDataShippingMethodInterface = factory(root.magento.ApiClient, root.magento.QuoteDataShippingMethodExtensionInterface);
  }
}(this, function(ApiClient, QuoteDataShippingMethodExtensionInterface) {
  'use strict';




  /**
   * The QuoteDataShippingMethodInterface model module.
   * @module model/QuoteDataShippingMethodInterface
   * @version 2.0
   */

  /**
   * Constructs a new <code>QuoteDataShippingMethodInterface</code>.
   * Interface ShippingMethodInterface
   * @alias module:model/QuoteDataShippingMethodInterface
   * @class
   * @param carrierCode {String} Shipping carrier code.
   * @param methodCode {String} Shipping method code.
   * @param amount {Number} Shipping amount in store currency.
   * @param baseAmount {Number} Shipping amount in base currency.
   * @param available {Boolean} The value of the availability flag for the current shipping method.
   * @param errorMessage {String} Shipping Error message.
   * @param priceExclTax {Number} Shipping price excl tax.
   * @param priceInclTax {Number} Shipping price incl tax.
   */
  var exports = function(carrierCode, methodCode, amount, baseAmount, available, errorMessage, priceExclTax, priceInclTax) {
    var _this = this;

    _this['carrierCode'] = carrierCode;
    _this['methodCode'] = methodCode;


    _this['amount'] = amount;
    _this['baseAmount'] = baseAmount;
    _this['available'] = available;

    _this['errorMessage'] = errorMessage;
    _this['priceExclTax'] = priceExclTax;
    _this['priceInclTax'] = priceInclTax;
  };

  /**
   * Constructs a <code>QuoteDataShippingMethodInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/QuoteDataShippingMethodInterface} obj Optional instance to populate.
   * @return {module:model/QuoteDataShippingMethodInterface} The populated <code>QuoteDataShippingMethodInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('carrierCode')) {
        obj['carrierCode'] = ApiClient.convertToType(data['carrierCode'], 'String');
      }
      if (data.hasOwnProperty('methodCode')) {
        obj['methodCode'] = ApiClient.convertToType(data['methodCode'], 'String');
      }
      if (data.hasOwnProperty('carrierTitle')) {
        obj['carrierTitle'] = ApiClient.convertToType(data['carrierTitle'], 'String');
      }
      if (data.hasOwnProperty('methodTitle')) {
        obj['methodTitle'] = ApiClient.convertToType(data['methodTitle'], 'String');
      }
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
      }
      if (data.hasOwnProperty('baseAmount')) {
        obj['baseAmount'] = ApiClient.convertToType(data['baseAmount'], 'Number');
      }
      if (data.hasOwnProperty('available')) {
        obj['available'] = ApiClient.convertToType(data['available'], 'Boolean');
      }
      if (data.hasOwnProperty('extensionAttributes')) {
        obj['extensionAttributes'] = QuoteDataShippingMethodExtensionInterface.constructFromObject(data['extensionAttributes']);
      }
      if (data.hasOwnProperty('errorMessage')) {
        obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
      }
      if (data.hasOwnProperty('priceExclTax')) {
        obj['priceExclTax'] = ApiClient.convertToType(data['priceExclTax'], 'Number');
      }
      if (data.hasOwnProperty('priceInclTax')) {
        obj['priceInclTax'] = ApiClient.convertToType(data['priceInclTax'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Shipping carrier code.
   * @member {String} carrierCode
   */
  exports.prototype['carrierCode'] = undefined;
  /**
   * Shipping method code.
   * @member {String} methodCode
   */
  exports.prototype['methodCode'] = undefined;
  /**
   * Shipping carrier title. Otherwise, null.
   * @member {String} carrierTitle
   */
  exports.prototype['carrierTitle'] = undefined;
  /**
   * Shipping method title. Otherwise, null.
   * @member {String} methodTitle
   */
  exports.prototype['methodTitle'] = undefined;
  /**
   * Shipping amount in store currency.
   * @member {Number} amount
   */
  exports.prototype['amount'] = undefined;
  /**
   * Shipping amount in base currency.
   * @member {Number} baseAmount
   */
  exports.prototype['baseAmount'] = undefined;
  /**
   * The value of the availability flag for the current shipping method.
   * @member {Boolean} available
   */
  exports.prototype['available'] = undefined;
  /**
   * @member {module:model/QuoteDataShippingMethodExtensionInterface} extensionAttributes
   */
  exports.prototype['extensionAttributes'] = undefined;
  /**
   * Shipping Error message.
   * @member {String} errorMessage
   */
  exports.prototype['errorMessage'] = undefined;
  /**
   * Shipping price excl tax.
   * @member {Number} priceExclTax
   */
  exports.prototype['priceExclTax'] = undefined;
  /**
   * Shipping price incl tax.
   * @member {Number} priceInclTax
   */
  exports.prototype['priceInclTax'] = undefined;



  return exports;
}));



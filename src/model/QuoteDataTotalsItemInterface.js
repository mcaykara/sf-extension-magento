/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/QuoteDataTotalsItemExtensionInterface'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./QuoteDataTotalsItemExtensionInterface'));
  } else {
    // Browser globals (root is window)
    if (!root.magento) {
      root.magento = {};
    }
    root.magento.QuoteDataTotalsItemInterface = factory(root.magento.ApiClient, root.magento.QuoteDataTotalsItemExtensionInterface);
  }
}(this, function(ApiClient, QuoteDataTotalsItemExtensionInterface) {
  'use strict';




  /**
   * The QuoteDataTotalsItemInterface model module.
   * @module model/QuoteDataTotalsItemInterface
   * @version 2.0
   */

  /**
   * Constructs a new <code>QuoteDataTotalsItemInterface</code>.
   * Interface TotalsItemInterface
   * @alias module:model/QuoteDataTotalsItemInterface
   * @class
   * @param itemId {Number} Item id
   * @param price {Number} Item price in quote currency.
   * @param basePrice {Number} Item price in base currency.
   * @param qty {Number} Item quantity.
   * @param rowTotal {Number} Row total in quote currency.
   * @param baseRowTotal {Number} Row total in base currency.
   * @param options {String} Item price in quote currency.
   * @param weeeTaxAppliedAmount {Number} Item weee tax applied amount in quote currency.
   * @param weeeTaxApplied {String} Item weee tax applied in quote currency.
   */
  var exports = function(itemId, price, basePrice, qty, rowTotal, baseRowTotal, options, weeeTaxAppliedAmount, weeeTaxApplied) {
    var _this = this;

    _this['itemId'] = itemId;
    _this['price'] = price;
    _this['basePrice'] = basePrice;
    _this['qty'] = qty;
    _this['rowTotal'] = rowTotal;
    _this['baseRowTotal'] = baseRowTotal;











    _this['options'] = options;
    _this['weeeTaxAppliedAmount'] = weeeTaxAppliedAmount;
    _this['weeeTaxApplied'] = weeeTaxApplied;


  };

  /**
   * Constructs a <code>QuoteDataTotalsItemInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/QuoteDataTotalsItemInterface} obj Optional instance to populate.
   * @return {module:model/QuoteDataTotalsItemInterface} The populated <code>QuoteDataTotalsItemInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('itemId')) {
        obj['itemId'] = ApiClient.convertToType(data['itemId'], 'Number');
      }
      if (data.hasOwnProperty('price')) {
        obj['price'] = ApiClient.convertToType(data['price'], 'Number');
      }
      if (data.hasOwnProperty('basePrice')) {
        obj['basePrice'] = ApiClient.convertToType(data['basePrice'], 'Number');
      }
      if (data.hasOwnProperty('qty')) {
        obj['qty'] = ApiClient.convertToType(data['qty'], 'Number');
      }
      if (data.hasOwnProperty('rowTotal')) {
        obj['rowTotal'] = ApiClient.convertToType(data['rowTotal'], 'Number');
      }
      if (data.hasOwnProperty('baseRowTotal')) {
        obj['baseRowTotal'] = ApiClient.convertToType(data['baseRowTotal'], 'Number');
      }
      if (data.hasOwnProperty('rowTotalWithDiscount')) {
        obj['rowTotalWithDiscount'] = ApiClient.convertToType(data['rowTotalWithDiscount'], 'Number');
      }
      if (data.hasOwnProperty('taxAmount')) {
        obj['taxAmount'] = ApiClient.convertToType(data['taxAmount'], 'Number');
      }
      if (data.hasOwnProperty('baseTaxAmount')) {
        obj['baseTaxAmount'] = ApiClient.convertToType(data['baseTaxAmount'], 'Number');
      }
      if (data.hasOwnProperty('taxPercent')) {
        obj['taxPercent'] = ApiClient.convertToType(data['taxPercent'], 'Number');
      }
      if (data.hasOwnProperty('discountAmount')) {
        obj['discountAmount'] = ApiClient.convertToType(data['discountAmount'], 'Number');
      }
      if (data.hasOwnProperty('baseDiscountAmount')) {
        obj['baseDiscountAmount'] = ApiClient.convertToType(data['baseDiscountAmount'], 'Number');
      }
      if (data.hasOwnProperty('discountPercent')) {
        obj['discountPercent'] = ApiClient.convertToType(data['discountPercent'], 'Number');
      }
      if (data.hasOwnProperty('priceInclTax')) {
        obj['priceInclTax'] = ApiClient.convertToType(data['priceInclTax'], 'Number');
      }
      if (data.hasOwnProperty('basePriceInclTax')) {
        obj['basePriceInclTax'] = ApiClient.convertToType(data['basePriceInclTax'], 'Number');
      }
      if (data.hasOwnProperty('rowTotalInclTax')) {
        obj['rowTotalInclTax'] = ApiClient.convertToType(data['rowTotalInclTax'], 'Number');
      }
      if (data.hasOwnProperty('baseRowTotalInclTax')) {
        obj['baseRowTotalInclTax'] = ApiClient.convertToType(data['baseRowTotalInclTax'], 'Number');
      }
      if (data.hasOwnProperty('options')) {
        obj['options'] = ApiClient.convertToType(data['options'], 'String');
      }
      if (data.hasOwnProperty('weeeTaxAppliedAmount')) {
        obj['weeeTaxAppliedAmount'] = ApiClient.convertToType(data['weeeTaxAppliedAmount'], 'Number');
      }
      if (data.hasOwnProperty('weeeTaxApplied')) {
        obj['weeeTaxApplied'] = ApiClient.convertToType(data['weeeTaxApplied'], 'String');
      }
      if (data.hasOwnProperty('extensionAttributes')) {
        obj['extensionAttributes'] = QuoteDataTotalsItemExtensionInterface.constructFromObject(data['extensionAttributes']);
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
    }
    return obj;
  }

  /**
   * Item id
   * @member {Number} itemId
   */
  exports.prototype['itemId'] = undefined;
  /**
   * Item price in quote currency.
   * @member {Number} price
   */
  exports.prototype['price'] = undefined;
  /**
   * Item price in base currency.
   * @member {Number} basePrice
   */
  exports.prototype['basePrice'] = undefined;
  /**
   * Item quantity.
   * @member {Number} qty
   */
  exports.prototype['qty'] = undefined;
  /**
   * Row total in quote currency.
   * @member {Number} rowTotal
   */
  exports.prototype['rowTotal'] = undefined;
  /**
   * Row total in base currency.
   * @member {Number} baseRowTotal
   */
  exports.prototype['baseRowTotal'] = undefined;
  /**
   * Row total with discount in quote currency. Otherwise, null.
   * @member {Number} rowTotalWithDiscount
   */
  exports.prototype['rowTotalWithDiscount'] = undefined;
  /**
   * Tax amount in quote currency. Otherwise, null.
   * @member {Number} taxAmount
   */
  exports.prototype['taxAmount'] = undefined;
  /**
   * Tax amount in base currency. Otherwise, null.
   * @member {Number} baseTaxAmount
   */
  exports.prototype['baseTaxAmount'] = undefined;
  /**
   * Tax percent. Otherwise, null.
   * @member {Number} taxPercent
   */
  exports.prototype['taxPercent'] = undefined;
  /**
   * Discount amount in quote currency. Otherwise, null.
   * @member {Number} discountAmount
   */
  exports.prototype['discountAmount'] = undefined;
  /**
   * Discount amount in base currency. Otherwise, null.
   * @member {Number} baseDiscountAmount
   */
  exports.prototype['baseDiscountAmount'] = undefined;
  /**
   * Discount percent. Otherwise, null.
   * @member {Number} discountPercent
   */
  exports.prototype['discountPercent'] = undefined;
  /**
   * Price including tax in quote currency. Otherwise, null.
   * @member {Number} priceInclTax
   */
  exports.prototype['priceInclTax'] = undefined;
  /**
   * Price including tax in base currency. Otherwise, null.
   * @member {Number} basePriceInclTax
   */
  exports.prototype['basePriceInclTax'] = undefined;
  /**
   * Row total including tax in quote currency. Otherwise, null.
   * @member {Number} rowTotalInclTax
   */
  exports.prototype['rowTotalInclTax'] = undefined;
  /**
   * Row total including tax in base currency. Otherwise, null.
   * @member {Number} baseRowTotalInclTax
   */
  exports.prototype['baseRowTotalInclTax'] = undefined;
  /**
   * Item price in quote currency.
   * @member {String} options
   */
  exports.prototype['options'] = undefined;
  /**
   * Item weee tax applied amount in quote currency.
   * @member {Number} weeeTaxAppliedAmount
   */
  exports.prototype['weeeTaxAppliedAmount'] = undefined;
  /**
   * Item weee tax applied in quote currency.
   * @member {String} weeeTaxApplied
   */
  exports.prototype['weeeTaxApplied'] = undefined;
  /**
   * @member {module:model/QuoteDataTotalsItemExtensionInterface} extensionAttributes
   */
  exports.prototype['extensionAttributes'] = undefined;
  /**
   * Product name. Otherwise, null.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;



  return exports;
}));



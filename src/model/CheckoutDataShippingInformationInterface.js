/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CheckoutDataShippingInformationExtensionInterface', 'model/FrameworkAttributeInterface', 'model/QuoteDataAddressInterface'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CheckoutDataShippingInformationExtensionInterface'), require('./FrameworkAttributeInterface'), require('./QuoteDataAddressInterface'));
  } else {
    // Browser globals (root is window)
    if (!root.magento) {
      root.magento = {};
    }
    root.magento.CheckoutDataShippingInformationInterface = factory(root.magento.ApiClient, root.magento.CheckoutDataShippingInformationExtensionInterface, root.magento.FrameworkAttributeInterface, root.magento.QuoteDataAddressInterface);
  }
}(this, function(ApiClient, CheckoutDataShippingInformationExtensionInterface, FrameworkAttributeInterface, QuoteDataAddressInterface) {
  'use strict';




  /**
   * The CheckoutDataShippingInformationInterface model module.
   * @module model/CheckoutDataShippingInformationInterface
   * @version 2.0
   */

  /**
   * Constructs a new <code>CheckoutDataShippingInformationInterface</code>.
   * 
   * @alias module:model/CheckoutDataShippingInformationInterface
   * @class
   * @param shippingAddress {module:model/QuoteDataAddressInterface} 
   * @param shippingMethodCode {String} Shipping method code
   * @param shippingCarrierCode {String} Carrier code
   */
  var exports = function(shippingAddress, shippingMethodCode, shippingCarrierCode) {
    var _this = this;

    _this['shippingAddress'] = shippingAddress;

    _this['shippingMethodCode'] = shippingMethodCode;
    _this['shippingCarrierCode'] = shippingCarrierCode;


  };

  /**
   * Constructs a <code>CheckoutDataShippingInformationInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CheckoutDataShippingInformationInterface} obj Optional instance to populate.
   * @return {module:model/CheckoutDataShippingInformationInterface} The populated <code>CheckoutDataShippingInformationInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('shippingAddress')) {
        obj['shippingAddress'] = QuoteDataAddressInterface.constructFromObject(data['shippingAddress']);
      }
      if (data.hasOwnProperty('billingAddress')) {
        obj['billingAddress'] = QuoteDataAddressInterface.constructFromObject(data['billingAddress']);
      }
      if (data.hasOwnProperty('shippingMethodCode')) {
        obj['shippingMethodCode'] = ApiClient.convertToType(data['shippingMethodCode'], 'String');
      }
      if (data.hasOwnProperty('shippingCarrierCode')) {
        obj['shippingCarrierCode'] = ApiClient.convertToType(data['shippingCarrierCode'], 'String');
      }
      if (data.hasOwnProperty('extensionAttributes')) {
        obj['extensionAttributes'] = CheckoutDataShippingInformationExtensionInterface.constructFromObject(data['extensionAttributes']);
      }
      if (data.hasOwnProperty('customAttributes')) {
        obj['customAttributes'] = ApiClient.convertToType(data['customAttributes'], [FrameworkAttributeInterface]);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/QuoteDataAddressInterface} shippingAddress
   */
  exports.prototype['shippingAddress'] = undefined;
  /**
   * @member {module:model/QuoteDataAddressInterface} billingAddress
   */
  exports.prototype['billingAddress'] = undefined;
  /**
   * Shipping method code
   * @member {String} shippingMethodCode
   */
  exports.prototype['shippingMethodCode'] = undefined;
  /**
   * Carrier code
   * @member {String} shippingCarrierCode
   */
  exports.prototype['shippingCarrierCode'] = undefined;
  /**
   * @member {module:model/CheckoutDataShippingInformationExtensionInterface} extensionAttributes
   */
  exports.prototype['extensionAttributes'] = undefined;
  /**
   * Custom attributes values.
   * @member {Array.<module:model/FrameworkAttributeInterface>} customAttributes
   */
  exports.prototype['customAttributes'] = undefined;



  return exports;
}));



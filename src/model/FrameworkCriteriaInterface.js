/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/FrameworkCriteriaInterface'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./FrameworkCriteriaInterface'));
  } else {
    // Browser globals (root is window)
    if (!root.magento) {
      root.magento = {};
    }
    root.magento.FrameworkCriteriaInterface = factory(root.magento.ApiClient, root.magento.FrameworkCriteriaInterface);
  }
}(this, function(ApiClient, FrameworkCriteriaInterface) {
  'use strict';




  /**
   * The FrameworkCriteriaInterface model module.
   * @module model/FrameworkCriteriaInterface
   * @version 2.0
   */

  /**
   * Constructs a new <code>FrameworkCriteriaInterface</code>.
   * Interface CriteriaInterface
   * @alias module:model/FrameworkCriteriaInterface
   * @class
   * @param mapperInterfaceName {String} Associated Mapper Interface name
   * @param criteriaList {Array.<module:model/FrameworkCriteriaInterface>} Criteria objects added to current Composite Criteria
   * @param filters {Array.<String>} List of filters
   * @param orders {Array.<String>} Ordering criteria
   * @param limit {Array.<String>} Limit
   */
  var exports = function(mapperInterfaceName, criteriaList, filters, orders, limit) {
    var _this = this;

    _this['mapperInterfaceName'] = mapperInterfaceName;
    _this['criteriaList'] = criteriaList;
    _this['filters'] = filters;
    _this['orders'] = orders;
    _this['limit'] = limit;
  };

  /**
   * Constructs a <code>FrameworkCriteriaInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FrameworkCriteriaInterface} obj Optional instance to populate.
   * @return {module:model/FrameworkCriteriaInterface} The populated <code>FrameworkCriteriaInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('mapperInterfaceName')) {
        obj['mapperInterfaceName'] = ApiClient.convertToType(data['mapperInterfaceName'], 'String');
      }
      if (data.hasOwnProperty('criteriaList')) {
        obj['criteriaList'] = ApiClient.convertToType(data['criteriaList'], [FrameworkCriteriaInterface]);
      }
      if (data.hasOwnProperty('filters')) {
        obj['filters'] = ApiClient.convertToType(data['filters'], ['String']);
      }
      if (data.hasOwnProperty('orders')) {
        obj['orders'] = ApiClient.convertToType(data['orders'], ['String']);
      }
      if (data.hasOwnProperty('limit')) {
        obj['limit'] = ApiClient.convertToType(data['limit'], ['String']);
      }
    }
    return obj;
  }

  /**
   * Associated Mapper Interface name
   * @member {String} mapperInterfaceName
   */
  exports.prototype['mapperInterfaceName'] = undefined;
  /**
   * Criteria objects added to current Composite Criteria
   * @member {Array.<module:model/FrameworkCriteriaInterface>} criteriaList
   */
  exports.prototype['criteriaList'] = undefined;
  /**
   * List of filters
   * @member {Array.<String>} filters
   */
  exports.prototype['filters'] = undefined;
  /**
   * Ordering criteria
   * @member {Array.<String>} orders
   */
  exports.prototype['orders'] = undefined;
  /**
   * Limit
   * @member {Array.<String>} limit
   */
  exports.prototype['limit'] = undefined;



  return exports;
}));



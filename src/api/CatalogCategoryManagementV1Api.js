/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Body32', 'model/CatalogDataCategoryTreeInterface', 'model/ErrorResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Body32'), require('../model/CatalogDataCategoryTreeInterface'), require('../model/ErrorResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.magento) {
      root.magento = {};
    }
    root.magento.CatalogCategoryManagementV1Api = factory(root.magento.ApiClient, root.magento.Body32, root.magento.CatalogDataCategoryTreeInterface, root.magento.ErrorResponse);
  }
}(this, function(ApiClient, Body32, CatalogDataCategoryTreeInterface, ErrorResponse) {
  'use strict';

  /**
   * CatalogCategoryManagementV1 service.
   * @module api/CatalogCategoryManagementV1Api
   * @version 2.0
   */

  /**
   * Constructs a new CatalogCategoryManagementV1Api. 
   * @alias module:api/CatalogCategoryManagementV1Api
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the catalogCategoryManagementV1GetTreeGet operation.
     * @callback module:api/CatalogCategoryManagementV1Api~catalogCategoryManagementV1GetTreeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogDataCategoryTreeInterface} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve list of categories
     * @param {Object} opts Optional parameters
     * @param {Number} opts.rootCategoryId 
     * @param {Number} opts.depth 
     * @param {module:api/CatalogCategoryManagementV1Api~catalogCategoryManagementV1GetTreeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogDataCategoryTreeInterface}
     */
    this.catalogCategoryManagementV1GetTreeGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'rootCategoryId': opts['rootCategoryId'],
        'depth': opts['depth'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = CatalogDataCategoryTreeInterface;

      return this.apiClient.callApi(
        '/V1/categories', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the catalogCategoryManagementV1MovePut operation.
     * @callback module:api/CatalogCategoryManagementV1Api~catalogCategoryManagementV1MovePutCallback
     * @param {String} error Error message, if any.
     * @param {'Boolean'} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Move category
     * @param {Number} categoryId 
     * @param {Object} opts Optional parameters
     * @param {module:model/Body32} opts.body 
     * @param {module:api/CatalogCategoryManagementV1Api~catalogCategoryManagementV1MovePutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link 'Boolean'}
     */
    this.catalogCategoryManagementV1MovePut = function(categoryId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling catalogCategoryManagementV1MovePut");
      }


      var pathParams = {
        'categoryId': categoryId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = 'Boolean';

      return this.apiClient.callApi(
        '/V1/categories/{categoryId}/move', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));

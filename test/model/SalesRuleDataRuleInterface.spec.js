/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.magento);
  }
}(this, function(expect, magento) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new magento.SalesRuleDataRuleInterface();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SalesRuleDataRuleInterface', function() {
    it('should create an instance of SalesRuleDataRuleInterface', function() {
      // uncomment below and update the code to test SalesRuleDataRuleInterface
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be.a(magento.SalesRuleDataRuleInterface);
    });

    it('should have the property ruleId (base name: "ruleId")', function() {
      // uncomment below and update the code to test the property ruleId
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property storeLabels (base name: "storeLabels")', function() {
      // uncomment below and update the code to test the property storeLabels
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property websiteIds (base name: "websiteIds")', function() {
      // uncomment below and update the code to test the property websiteIds
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property customerGroupIds (base name: "customerGroupIds")', function() {
      // uncomment below and update the code to test the property customerGroupIds
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property fromDate (base name: "fromDate")', function() {
      // uncomment below and update the code to test the property fromDate
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property toDate (base name: "toDate")', function() {
      // uncomment below and update the code to test the property toDate
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property usesPerCustomer (base name: "usesPerCustomer")', function() {
      // uncomment below and update the code to test the property usesPerCustomer
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property isActive (base name: "isActive")', function() {
      // uncomment below and update the code to test the property isActive
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property condition (base name: "condition")', function() {
      // uncomment below and update the code to test the property condition
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property actionCondition (base name: "actionCondition")', function() {
      // uncomment below and update the code to test the property actionCondition
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property stopRulesProcessing (base name: "stopRulesProcessing")', function() {
      // uncomment below and update the code to test the property stopRulesProcessing
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property isAdvanced (base name: "isAdvanced")', function() {
      // uncomment below and update the code to test the property isAdvanced
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property productIds (base name: "productIds")', function() {
      // uncomment below and update the code to test the property productIds
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property sortOrder (base name: "sortOrder")', function() {
      // uncomment below and update the code to test the property sortOrder
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property simpleAction (base name: "simpleAction")', function() {
      // uncomment below and update the code to test the property simpleAction
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property discountAmount (base name: "discountAmount")', function() {
      // uncomment below and update the code to test the property discountAmount
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property discountQty (base name: "discountQty")', function() {
      // uncomment below and update the code to test the property discountQty
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property discountStep (base name: "discountStep")', function() {
      // uncomment below and update the code to test the property discountStep
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property applyToShipping (base name: "applyToShipping")', function() {
      // uncomment below and update the code to test the property applyToShipping
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property timesUsed (base name: "timesUsed")', function() {
      // uncomment below and update the code to test the property timesUsed
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property isRss (base name: "isRss")', function() {
      // uncomment below and update the code to test the property isRss
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property couponType (base name: "couponType")', function() {
      // uncomment below and update the code to test the property couponType
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property useAutoGeneration (base name: "useAutoGeneration")', function() {
      // uncomment below and update the code to test the property useAutoGeneration
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property usesPerCoupon (base name: "usesPerCoupon")', function() {
      // uncomment below and update the code to test the property usesPerCoupon
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property simpleFreeShipping (base name: "simpleFreeShipping")', function() {
      // uncomment below and update the code to test the property simpleFreeShipping
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

    it('should have the property extensionAttributes (base name: "extensionAttributes")', function() {
      // uncomment below and update the code to test the property extensionAttributes
      //var instane = new magento.SalesRuleDataRuleInterface();
      //expect(instance).to.be();
    });

  });

}));

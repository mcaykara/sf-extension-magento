/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.magento);
  }
}(this, function(expect, magento) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new magento.SalesDataOrderPaymentInterface();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SalesDataOrderPaymentInterface', function() {
    it('should create an instance of SalesDataOrderPaymentInterface', function() {
      // uncomment below and update the code to test SalesDataOrderPaymentInterface
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be.a(magento.SalesDataOrderPaymentInterface);
    });

    it('should have the property accountStatus (base name: "accountStatus")', function() {
      // uncomment below and update the code to test the property accountStatus
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property additionalData (base name: "additionalData")', function() {
      // uncomment below and update the code to test the property additionalData
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property additionalInformation (base name: "additionalInformation")', function() {
      // uncomment below and update the code to test the property additionalInformation
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property addressStatus (base name: "addressStatus")', function() {
      // uncomment below and update the code to test the property addressStatus
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property amountAuthorized (base name: "amountAuthorized")', function() {
      // uncomment below and update the code to test the property amountAuthorized
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property amountCanceled (base name: "amountCanceled")', function() {
      // uncomment below and update the code to test the property amountCanceled
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property amountOrdered (base name: "amountOrdered")', function() {
      // uncomment below and update the code to test the property amountOrdered
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property amountPaid (base name: "amountPaid")', function() {
      // uncomment below and update the code to test the property amountPaid
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property amountRefunded (base name: "amountRefunded")', function() {
      // uncomment below and update the code to test the property amountRefunded
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property anetTransMethod (base name: "anetTransMethod")', function() {
      // uncomment below and update the code to test the property anetTransMethod
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseAmountAuthorized (base name: "baseAmountAuthorized")', function() {
      // uncomment below and update the code to test the property baseAmountAuthorized
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseAmountCanceled (base name: "baseAmountCanceled")', function() {
      // uncomment below and update the code to test the property baseAmountCanceled
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseAmountOrdered (base name: "baseAmountOrdered")', function() {
      // uncomment below and update the code to test the property baseAmountOrdered
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseAmountPaid (base name: "baseAmountPaid")', function() {
      // uncomment below and update the code to test the property baseAmountPaid
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseAmountPaidOnline (base name: "baseAmountPaidOnline")', function() {
      // uncomment below and update the code to test the property baseAmountPaidOnline
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseAmountRefunded (base name: "baseAmountRefunded")', function() {
      // uncomment below and update the code to test the property baseAmountRefunded
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseAmountRefundedOnline (base name: "baseAmountRefundedOnline")', function() {
      // uncomment below and update the code to test the property baseAmountRefundedOnline
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseShippingAmount (base name: "baseShippingAmount")', function() {
      // uncomment below and update the code to test the property baseShippingAmount
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseShippingCaptured (base name: "baseShippingCaptured")', function() {
      // uncomment below and update the code to test the property baseShippingCaptured
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseShippingRefunded (base name: "baseShippingRefunded")', function() {
      // uncomment below and update the code to test the property baseShippingRefunded
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccApproval (base name: "ccApproval")', function() {
      // uncomment below and update the code to test the property ccApproval
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccAvsStatus (base name: "ccAvsStatus")', function() {
      // uncomment below and update the code to test the property ccAvsStatus
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccCidStatus (base name: "ccCidStatus")', function() {
      // uncomment below and update the code to test the property ccCidStatus
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccDebugRequestBody (base name: "ccDebugRequestBody")', function() {
      // uncomment below and update the code to test the property ccDebugRequestBody
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccDebugResponseBody (base name: "ccDebugResponseBody")', function() {
      // uncomment below and update the code to test the property ccDebugResponseBody
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccDebugResponseSerialized (base name: "ccDebugResponseSerialized")', function() {
      // uncomment below and update the code to test the property ccDebugResponseSerialized
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccExpMonth (base name: "ccExpMonth")', function() {
      // uncomment below and update the code to test the property ccExpMonth
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccExpYear (base name: "ccExpYear")', function() {
      // uncomment below and update the code to test the property ccExpYear
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccLast4 (base name: "ccLast4")', function() {
      // uncomment below and update the code to test the property ccLast4
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccNumberEnc (base name: "ccNumberEnc")', function() {
      // uncomment below and update the code to test the property ccNumberEnc
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccOwner (base name: "ccOwner")', function() {
      // uncomment below and update the code to test the property ccOwner
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccSecureVerify (base name: "ccSecureVerify")', function() {
      // uncomment below and update the code to test the property ccSecureVerify
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccSsIssue (base name: "ccSsIssue")', function() {
      // uncomment below and update the code to test the property ccSsIssue
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccSsStartMonth (base name: "ccSsStartMonth")', function() {
      // uncomment below and update the code to test the property ccSsStartMonth
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccSsStartYear (base name: "ccSsStartYear")', function() {
      // uncomment below and update the code to test the property ccSsStartYear
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccStatus (base name: "ccStatus")', function() {
      // uncomment below and update the code to test the property ccStatus
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccStatusDescription (base name: "ccStatusDescription")', function() {
      // uncomment below and update the code to test the property ccStatusDescription
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccTransId (base name: "ccTransId")', function() {
      // uncomment below and update the code to test the property ccTransId
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property ccType (base name: "ccType")', function() {
      // uncomment below and update the code to test the property ccType
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property echeckAccountName (base name: "echeckAccountName")', function() {
      // uncomment below and update the code to test the property echeckAccountName
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property echeckAccountType (base name: "echeckAccountType")', function() {
      // uncomment below and update the code to test the property echeckAccountType
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property echeckBankName (base name: "echeckBankName")', function() {
      // uncomment below and update the code to test the property echeckBankName
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property echeckRoutingNumber (base name: "echeckRoutingNumber")', function() {
      // uncomment below and update the code to test the property echeckRoutingNumber
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property echeckType (base name: "echeckType")', function() {
      // uncomment below and update the code to test the property echeckType
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property entityId (base name: "entityId")', function() {
      // uncomment below and update the code to test the property entityId
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property lastTransId (base name: "lastTransId")', function() {
      // uncomment below and update the code to test the property lastTransId
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property method (base name: "method")', function() {
      // uncomment below and update the code to test the property method
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property parentId (base name: "parentId")', function() {
      // uncomment below and update the code to test the property parentId
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property poNumber (base name: "poNumber")', function() {
      // uncomment below and update the code to test the property poNumber
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property protectionEligibility (base name: "protectionEligibility")', function() {
      // uncomment below and update the code to test the property protectionEligibility
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property quotePaymentId (base name: "quotePaymentId")', function() {
      // uncomment below and update the code to test the property quotePaymentId
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property shippingAmount (base name: "shippingAmount")', function() {
      // uncomment below and update the code to test the property shippingAmount
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property shippingCaptured (base name: "shippingCaptured")', function() {
      // uncomment below and update the code to test the property shippingCaptured
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property shippingRefunded (base name: "shippingRefunded")', function() {
      // uncomment below and update the code to test the property shippingRefunded
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

    it('should have the property extensionAttributes (base name: "extensionAttributes")', function() {
      // uncomment below and update the code to test the property extensionAttributes
      //var instane = new magento.SalesDataOrderPaymentInterface();
      //expect(instance).to.be();
    });

  });

}));

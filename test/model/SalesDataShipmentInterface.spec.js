/**
 * Magento Enterprise Edition 2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.magento);
  }
}(this, function(expect, magento) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new magento.SalesDataShipmentInterface();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SalesDataShipmentInterface', function() {
    it('should create an instance of SalesDataShipmentInterface', function() {
      // uncomment below and update the code to test SalesDataShipmentInterface
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be.a(magento.SalesDataShipmentInterface);
    });

    it('should have the property billingAddressId (base name: "billingAddressId")', function() {
      // uncomment below and update the code to test the property billingAddressId
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property customerId (base name: "customerId")', function() {
      // uncomment below and update the code to test the property customerId
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property emailSent (base name: "emailSent")', function() {
      // uncomment below and update the code to test the property emailSent
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property entityId (base name: "entityId")', function() {
      // uncomment below and update the code to test the property entityId
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property incrementId (base name: "incrementId")', function() {
      // uncomment below and update the code to test the property incrementId
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property orderId (base name: "orderId")', function() {
      // uncomment below and update the code to test the property orderId
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property packages (base name: "packages")', function() {
      // uncomment below and update the code to test the property packages
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property shipmentStatus (base name: "shipmentStatus")', function() {
      // uncomment below and update the code to test the property shipmentStatus
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property shippingAddressId (base name: "shippingAddressId")', function() {
      // uncomment below and update the code to test the property shippingAddressId
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property shippingLabel (base name: "shippingLabel")', function() {
      // uncomment below and update the code to test the property shippingLabel
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property storeId (base name: "storeId")', function() {
      // uncomment below and update the code to test the property storeId
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property totalQty (base name: "totalQty")', function() {
      // uncomment below and update the code to test the property totalQty
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property totalWeight (base name: "totalWeight")', function() {
      // uncomment below and update the code to test the property totalWeight
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property items (base name: "items")', function() {
      // uncomment below and update the code to test the property items
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property tracks (base name: "tracks")', function() {
      // uncomment below and update the code to test the property tracks
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property comments (base name: "comments")', function() {
      // uncomment below and update the code to test the property comments
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

    it('should have the property extensionAttributes (base name: "extensionAttributes")', function() {
      // uncomment below and update the code to test the property extensionAttributes
      //var instane = new magento.SalesDataShipmentInterface();
      //expect(instance).to.be();
    });

  });

}));
